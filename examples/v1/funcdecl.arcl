// A simple function
decl func<<int, int>, int> sum = func<<int, int>, int> (a, b) a + b;
decl sum = new func<<int, int>, int> (a, b) a + b;         // We can also omit the type

// More complex functions
// Return the sum of two numbers if positive, otherwise returns 0
decl sub_if_positive -> func<<int, int>, uint> (a, b) {
    decl result = a + b;

    if result > 0 {
        (result ~> uint) ?? 0 // Returns the content of ok<_>, otherwise returns 0
    } else 0
};

// Omiting parts
decl my_func -> func {}; // A functions that has no input and no output