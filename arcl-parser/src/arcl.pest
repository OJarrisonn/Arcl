program = { SOI ~ coreexprs ~ EOI }

// Expressions ======================================================================================================

expr = {
    coreexpr 
    | stringlit 
    | charlit 
    | formatstringexpr 
    | integerlit
    | floatlit
}

coreexprs = _{ ( coreexpr ~ ";" )+ }

coreexpr = _{
    ( 
        declexpr |
        defnexpr |
        consexpr |
        linkexpr |
        testexpr |
        mainexpr
    )
}

declexpr = { "decl" ~ "var"? ~ (typeident ~ ident | ident) ~ ( copy ~ expr | point ~ ref ~ (deref)* ~ ident)? }
defnexpr = { "defn" }
consexpr = { "cons" }
linkexpr = { "link" ~ (ident ~ from )? ~ pathident }
testexpr = { "test" }
mainexpr = { "main" }


// Operators ===========================================================================================================
point = { "->" }
from = { "<-" }
copy = { "=" }

ref = { readref | writeref }
readref = {"&"}
writeref = {"@"}
deref = {"*"}

nullable = { "?" }
failable = { "!" }
crashable = { "#" }

access = { readable | writable }
readable = { "read" }
writable = { "write" }

// Identifiers =========================================================================================================
//acident = @{ "_"? ~ ASCII_ALPHA_UPPER ~ (ASCII_ALPHA_UPPER | "_")* }
//scident = @{ "_"? ~ ASCII_ALPHA_LOWER ~ (ASCII_ALPHA_LOWER | "_")* }
//pcident = @{ "_"? ~ (ASCII_ALPHA_UPPER ~ ASCII_ALPHA_LOWER*)+}

ident = @{"_"? ~ (ASCII_ALPHA) ~ (ASCII_ALPHANUMERIC | "_")*}

//moduleident = _{ ident }
//linkident = _{ ident }

pathident = @{ ("~" | ASCII_ALPHA_LOWER+)? ~ ("/" ~ (ASCII_ALPHA_LOWER | "_")+)+ }
typeident = { 
    ident 
    | scpdident 
    | cpdident 
    | ncdpident 
    | objident 
    | arrayident 
    | blockident 
    | tpltident 
    | (ref+ ~ typeident) 
    | (cpdident ~ (nullable | failable | crashable))
}

scpdident   = _{ "(" ~ typeident ~ ")" }
cpdident    = _{ "(" ~ (typeident ~ ",")* ~ typeident? ~ ")" }
ncdpident   = _{ "(" ~ (typeident ~ ident ~ ",")* ~ (typeident ~ ident)? ~ ")" }
objident    = _{ "<" ~ (access ~ typeident ~ ident ~ ",")* ~ (access ~ typeident ~ ident)? ~ ">" }
arrayident  = _{ "[" ~ typeident ~ integerlit ~ "]" }
blockident  = _{ "[" ~ typeident ~ "]" }
tpltident   = _{ scpdident ~ "<" ~ (typeident ~ ",")* ~ typeident? ~ ">" }

// Literals =============================================================================================================
stringlit =         ${ "\"" ~ stringinner ~ "\"" }
formatstringexpr =  ${ "`" ~ (formatstringinner ~ ("{" ~ ident ~ "}") ~ formatstringinner)* ~ "`" }
charlit =           ${"\'" ~ charinner ~ "\'" }

integerlit = @{ ASCII_DIGIT+ }
floatlit = @{ (ASCII_DIGIT+ ~ "." ~ ASCII_DIGIT*) | (ASCII_DIGIT* ~ "." ~ ASCII_DIGIT+)}

stringinner = @{ charinner* }
formatstringinner = @{ formatcharinner* }
charinner = {
    !("\"" | "\\" ) ~ ANY
    | "\\" ~ ("\"" | "\\" | "/" | "b" | "f" | "n" | "r" | "t")
    | "\\" ~ ("u" ~ ASCII_HEX_DIGIT{4})
}
formatcharinner = {
    !("`" | "\\" | "{") ~ ANY
    | "\\" ~ ("\"" | "\\" | "/" | "b" | "f" | "n" | "r" | "t" | "{")
    | "\\" ~ ("u" ~ ASCII_HEX_DIGIT{4})
}

WHITESPACE = _{ " " | "\t" | "\r" | "\n" }
COMMENT = _{ "/*" ~ (!"*/" ~ ANY)* ~ "*/" }